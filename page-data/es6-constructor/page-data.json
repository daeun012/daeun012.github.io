{"componentChunkName":"component---src-templates-post-tsx","path":"/es6-constructor/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"constructor\" style=\"position:relative;\"><a href=\"#constructor\" aria-label=\"constructor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>constructor</h2>\n<p>객체(인스턴스)를 생성하고 클래스 필드를 초기화하기 위한 특수한 메소드<br>\n※ 클래스 필드 : 자바스크립트의 생성자 함수에서 this에 추가한 프로퍼티</p>\n<h3 id=\"1-예문으로-이해하기\" style=\"position:relative;\"><a href=\"#1-%EC%98%88%EB%AC%B8%EC%9C%BC%EB%A1%9C-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0\" aria-label=\"1 예문으로 이해하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 예문으로 이해하기</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 클래스 선언문</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// constructor(생성자). 이름을 바꿀 수 없다.</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// this는 클래스가 생성할 인스턴스를 가리킨다.</span>\n    <span class=\"token comment\">// _name은 클래스 필드이다.</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 인스턴스 생성</span>\n<span class=\"token keyword\">const</span> me <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Lee'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>me<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Person {_name: \"Lee\"}</span>\ncs<span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>클래스는 <code class=\"language-text\">constructor</code>라는 이름을 가진 특별한 메서드를 하나씩만 가질 수 있습니다. 2개 이상일 시 <code class=\"language-text\">SyntaxError</code>을 유발합니다.</li>\n<li>인스턴스를 생성할 때 new 연산자와 함께 호출한 것이 바로 <code class=\"language-text\">constructor</code>이며 <code class=\"language-text\">constructor</code>의 파라미터에 전달한 값은 클래스 필드에 할당합니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 클래스 선언문</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> me <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>me<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Person {}</span>\n\n<span class=\"token comment\">// 프로퍼티 동적 할당 및 초기화</span>\nme<span class=\"token punctuation\">.</span>_name <span class=\"token operator\">=</span> <span class=\"token string\">'daeun'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>me<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Person {_name: \"daeun\"}</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">constructor</code>은 생략할 수 있습니다. 생략하면 클래스에 <code class=\"language-text\">constructor( ){ }</code>를 포함한 것과 동일하게 동작합니다.</li>\n<li>따라서 인스턴스에 프로퍼티를 추가하려면 인스턴스를 생성한 이후 프로퍼티를 동적으로 추가해야 합니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> me <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">'daeun'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>me<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">constructor</code>는 인스턴스의 생성과 동시에 클래스 필드의 생성과 초기화를 실행합니다.</li>\n<li>따라서 클래스 필드를 초기화해야 한다면 <code class=\"language-text\">constructor</code>를 생략해서는 안됩니다.</li>\n</ul>\n<hr>\n<h4 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h4>\n<ul>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Classes/constructor\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Classes/constructor</a></li>\n<li><a href=\"https://poiemaweb.com/es6-class\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://poiemaweb.com/es6-class</a></li>\n</ul>","excerpt":"constructor 객체(인스턴스)를 생성하고 클래스 필드를 초기화하기 위한 특수한 메소드 ※ 클래스 필드 : 자바스크립트의 생성자 함수에서 this에 추가한 프로퍼티 1. 예문으로 이해하기 클래스는 라는 이름을 가진 특별한 메서드를 하나씩만 가질…","tableOfContents":"<ul>\n<li>\n<p><a href=\"/es6-constructor/#constructor\">constructor</a></p>\n<ul>\n<li><a href=\"/es6-constructor/#1-%EC%98%88%EB%AC%B8%EC%9C%BC%EB%A1%9C-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0\">1. 예문으로 이해하기</a></li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/es6-constructor/"},"frontmatter":{"title":"ES6 Class의 생성자(constructor) 함수","date":"Apr 24, 2019","tags":["ES6","JavaScript"],"keywords":["ES6","생성자함수","constructor","javascript"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/es6-constructor/","series":[],"lastmod":"2019-04-24"}},"staticQueryHashes":["2027115977","694178885"]}